from unittest import TestCase
from embit.util import secp256k1
from binascii import hexlify, unhexlify
from embit.liquid.pset import PSET
from embit.liquid.transaction import LTransaction, LTransactionInput, LTransactionOutput
from embit.liquid import slip77
from embit.script import Script
from embit.liquid.descriptor import LDescriptor
from embit.bip32 import HDKey

class LiquidTest(TestCase):

    def test_value_commitment(self):
        # scalars in little endian
        vbf = bytes(reversed(unhexlify("8deb8cd6e79d8745a4cd13beb9222959f95f6c6b42b8ec524342b9c2879782e7")))
        # asset generator, blinded
        asset = bytes(reversed(unhexlify("6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d")))
        abf = bytes(reversed(unhexlify("15804b1a8aacaa52163a5e3a42182cb3a26cafbfe4e1d91c06c4adab4472695f")))
        # sec-serialized point
        expected = unhexlify("0b1c079dafd9725ddfd63eed4ad70e71113fa5158aa59ed5154c64627d42f1b342")

        gen = secp256k1.generator_generate_blinded(asset, abf)
        sec = secp256k1.generator_serialize(gen)
        self.assertEqual(sec, expected)

        # real value in satoshi
        value = round(2**62)
        # commitment
        commit = secp256k1.pedersen_commit(vbf, value, gen)
        sec = secp256k1.pedersen_commitment_serialize(commit)
        # commitments, sec-serialized
        # value_commitment = unhexlify("09d74784ca1f86fdb07726a9574f054946e4d8c547bfc42ee56b930f8f50af9da1")
        value_commitment = unhexlify("09e61ce0a80989c0223890645d29641a774dd9a57108b6e726d1f24cefbca1d9e1")
        self.assertEqual(sec, value_commitment)

        # nonce_commitment = bytes.fromhex("03b6627cedfa95a7b9200a3fb1041011e05a86968d873f74540d0cf5491c838df3")
        # some crazy proof
        # surjection_proof = bytes.fromhex("01000119b734c68b72ccb75288c919ecb976671dd7d17385d968f96215ca5161bd99eb913740ff7dd29a196b580068e058898c1ec7ecabfe147198fb988551a21580cd")

    def test_pset(self):
        psets = [
            "",
            "cHNldP8BAOUCAAAAAAGuRyPZXPN6wSbiWqD1H2SPAc71iny/ypyV8WCEVan99wAAAAAA/f///wMBbVIcOOweoVc0riK3xGBkQSgpwNBXnwpxPRwE7el5Am8BAAAAAAAAFX4AFgAU0f9GbzioopmlUxwIEtw2A7bBoqcBbVIcOOweoVc0riK3xGBkQSgpwNBXnwpxPRwE7el5Am8BAAAAAAAAB9AAF6kUhbF7AcbaCecOBk/Gxt9QgPuv5WmHAW1SHDjsHqFXNK4it8RgZEEoKcDQV58KcT0cBO3peQJvAQAAAAAAAAD5AAAAAAAAACICA4+F7aFsDQHCW1lLu+44Z7YijnN9Ho+pLkRPZJLh7cU4RzBEAiAXoGOtpIZJrYmLPIKqn1z3wmBvA8WKLjcweokcRq0fYQIgDxh4g9eWnco98n/Nt7kgbs+XtR7UBfBKzs12UVjX9H0BAAAAAA==",
        ]
        for b64 in psets:
            tx = PSET.from_string(b64)
            self.assertTrue(str(tx), b64)

    def test_sign(self):
        root = HDKey.from_string("tprv8ZgxMBicQKsPf27gmh4DbQqN2K6xnXA7m7AeceqQVGkRYny3X49sgcufzbJcq4k5eaGZDMijccdDzvQga2Saqd78dKqN52QwLyqgY8apX3j")
        psets = [
            "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"
        ]
        for b64 in psets:
            tx = PSET.from_string(b64)
        self.assertEqual(len(tx.to_string()), len(b64))
        tx.sign_with(root)
        LTransaction.parse(tx.tx.serialize())

    def test_slip77(self):
        seed = b"5"*32
        mbk = slip77.master_blinding_from_seed(seed)
        self.assertEqual(mbk.serialize(), unhexlify("4457fe1c2138f6f05b057a71600d8b0813ab73ab138e715fe62b7ba70a282a23"))

        # individual blinding key
        sc = Script(unhexlify("a914c5cf7922d5c4882f3718de54977f086199e3ca3387"))
        bpk = slip77.blinding_key(mbk, sc)
        self.assertEqual(bpk.serialize(), unhexlify("87f39cd4a0d90b804d00bd023cdc7d526d937a287bc8d540fb12401eb8e77886"))

    def test_rangeproof(self):
        tx = "02000000010161ec81269a870c234cf5bc940e6a501a59170634dc40dec64a2113bc0f18b5510100000000fdffffff030bbfaa67f3a1d4d17804c5f1661ac538f179e34030ca3314f2c932828646493ed5081ca5ecd48661c55e40da8e680810671ceb4e0052046289db8a61c6921bd0d818035165006aab5ad15093372f2268a0f17a174a225f77cb8c79cb06066499f5ec0c17a914c5cf7922d5c4882f3718de54977f086199e3ca33870a3f985d1e2c7302f4ed33b265eb4e50361c1a36f42994fae73f19b399df81e9de09369e66ab256f85390aa0d7826a27b28c63002046a4941863d41c88ba73db003b021b86ddebdf2783d477db0f829fdc327bc2a9882e7697c4a3e28b9b151e53e13717a9143171392675316d931905b590cc08d44653e71610870118696cf23e3209a6e84479d01f13fe79c901356ae53907cc882cffd3e26401230100000000000000f900006e00000000000247304402207c660c76a672313c9b0e85f725558c6a9376a51da1978d5c52b1e28f514a2e1e022029d20e7975499a6c70edddf76ab805f795a69e24239f5d784f5e189fb4e04dee012102f88d70eb972f0034548fab6cc583dfb35330766d92fb9793e998e4ea19e725af0043010001d24bc22e3ba61c698f9127a79e6642f94bdf11c51ffcb0a15fc379a77d69e4a27eee88c76e70879b4c723c8bcc47255a0e2241aaca0d4d620cb1972200f87011fd4e106033000000000000000160aa54000e33153b17f39866cbbd8f443a587c3bf8873523f8f85133b7e1dae762dc34417c89dc2067da545a49972b8deb67cddce8160b031f3e44c3bac86d02fe73399ca7843336d4c9a4c38c15c644320ebd5ca7d3526ced8886a9bded6c7834b5a727d8c1fba64738c5b5c4ccd3d745e52abed218f7439b9476afc38ca1fb49ec2691ce085b317a23338062fdbd7f93bd9261fad4aa25604423dc71f5e593d1bcc396fdb940cd159d7edaaafaa62ce1a01af097d26d2f0ccefd6ac59284676b8c2113e6bfc4420c362f7882d6af18c50f9aab55ecd113348f358c9fe00c0f79efc53eb21393c4064d55a3707a1bc942afec4480dbb11b0fa0e48fbaf5c17378263415588511097d299d88f76912a186e81eca3ae429e43c6a50ccc6ccaccf02cc01cac81048611fd5efb4b59c14f841ae973b03cf484dfc2d1922161ef52dc4bb65845b8edd16cfe9a9509249d06661906275495a351966180aecbd7f68503daa6379825fc6f40860e7e7487bd602a93d5c10267bc77af9230fa659fea8a75fdbbd4b3e4aec8ce852393a99ebf5695abb443959bdcec8a36ec0ce46226ff745a3c9650a2808841413b3eba91db4f66c978930d3413951d2e6a2e77561c95cb91755e7a115f5d6ea4bcf4d9672752782d8281b941a12c0d2bd205628771506bf88c445836f654e46cea98c550f98144617e493e85aa6aebade127a6b50a11c4760f74eb9ffe4226d3e36461006eaeb83d9a03e3d26adfde5e4c7e5ee7ab348d3a1dcbefafd58b56ed7fd30afebc524fc737d87fcd334c3ad9db437d8f310a0306538c1e5207565d705475ec470308cd7c6fa8e0ad59d12ba30f75bc3428eef91aec871b761afd91e31b92dcf1260a50371b7f020aaf1e767a4aaac8925e31842c57a8cb56e66da2dc3d88040a52859698f6e0dbb2c84e674c4de09eac9abf260163f2f9ff18631d477dccb009e1ede337e1165691e4f5fc4bf3d09a966834c76f9971941dcb242d28b2cd819d7584ece74d21550d9db13e539ac473622915611222109c8b87204d4ffbfadf16e063132990c295a42d40a2d01ad6332d5a34a028f1a7b2839f29ab6e19b24dc24a02d3a103f23e3031dc4c8a4886941e51feede21b60cfdd54e8db129408e5c575578b3b8b193d138dee87eb5406a44fe8b0b37e16cb3f260ff02e0f375ec6028429ca0cb60722ccfac66f87aee14e16e3ff54abe7eb3796c83846259200340080ef1f80dec2540ba4d77290bcad05794f8253681fcadbafbd701059b460e41bdbdaffc7f5993c45fc90b10ca1d3b63be3b3819ef235cf75da209c23d6562d228311293d7c4db6f9a3ec20989a02e66529a8e2d9316899b3bd2af2931670e2a6209a4ffaab5e8e05f9412f58c087e99161ad57057f86ac0775434b5a6a224c27ad3f3e6e6ea4190a23b50d47c37096612c29fb02a3108bb5c903a979c36d0e7c7341a0dffed887803a3a78bfe1b5cc2891dcd0e3f01c66ac975e45e1307320b63095583c4df9794fafb5d13ad22a039029c5cc686f2782fbd1cf83f7a916bd74abcc2e6e6b56b22b168ee3570c8b8b418303906a663ef8fc92dc5e665daab345d9c05887ad88c1ff7b39f128087ad74f2a8e52bbfc049bab0425e480f9af1b999374e32afb2ae809ca602bc50ae47afa517c5b14cfbb567600d808e1048ea6b4d68ae2dcc19c6eb2be08f2c1b8c8d428335dd9151caf77151c4b2886f20d4e2c568e6c1f6e70bc2ec97323a7cb9404ff113246b45b72a3a9ca6975ef981fbfec6f4e1bda1424cf8fb4d270f4c29fc2ddb6c38b662524876d81afe14a80e9e3d54fbaf54b8ab41e0efdb01db7615098f9ea1a68298bd9acf61cd5eb66b7a171921342c9b9ee32495ce480fdd0dd58dcc7970edde2b29787b5f4c82888855a425393227a069f32b6f9db0e2ab8ad084b048dac5ee2fd4acb53f5338a96da898c239e92f77543ac93c90462e72f7673fe2ddb379d121a47f07c0a5b2453606001125ab626991c3436e7d9ed78e479248bf54dc502d243267a587216ad364740a9cd87b181febaeafb613cdac74fb3a199f1d854a8965d6d93a508592c5dac86e8db5592e980bca3ec3e18897d254c376d78a2fcfff4a16cfc1116f5517a8cea53f400b597fbc264174e7467219a07c90a4a9dae471de17e14a088134001a3b486d6a4a10f95a75686e1c9bf4e35290e5b73e61064ca460e5674e0dd5092978f3c264f0036049f2979429fbf8e616d90343ec4dca6ed464dde7b2dec5637ebb9dd4550dd137d9b6b39cd7dbe64863d5b100da80c8226261a68b5f06413656afb165e5730f2b3677d35b0fddb3e1f6ec35b99a9900738aa4f7bd3a71916088415a17bdd5b752535642b9c5fdd5db3196d1dae707ecbb14c6d5266f6438eff62adeb101d43404a792ee5396f6e23c5611b3daf1176c0eed3c82d0d5c381d7f6069e1b5034cc666fd42ae87fe5a62e7c322efdf52d1c20fcdccdc425b23e41820eb74f567a6b2d2cb2acc73848df30f835502da8e149c86c729d0ec2f16bca6ab8e3226654055682a487f97c1d4cbc4af1ac81872ff2f4631ef5bf0c3b050151a8d99905e03f4da42458b9b4fd3700aa24bf884a50e3b79690bba922192a6ed272e18556f3c5822d9c357ac4de38ef695b9c4128bb3ebdaa721a84d1d0a5bf761e41020bc36605be79c472d247c8cdb3c3c97aed81e637030bc8173d85467201326836a52fc4dc5f7be5c57eb1f30c455b597e713b54f09e42ad91c5543f942f4d21471b8493bbfcf7ca6812757b9d4a92578f0848149b8f5db4f19f7743d3c3dcce24239a8f17332c5c82cc670b8880709af331317bcd6b3e9696f4b739dd0bb133b699cf473594ba4eb20d746df7f5e1a815083eaef02c829f08993a580fc9ef5fe261b638579fd92c24311753c7d15d9294d9503b83e3ce25300d1ed41417c74347db0cdbc0b6320c320b8084ca6f124b5ca83f51b2ebe118fd17f4ef7ff777486fe138eb90147698d8abda55351cb7aada68ef5d0eaf32f2c506a4cd51eadbc34c876b4ded119fa5df951bae43d26ccaf90e934145f929735684bd2665a4e6d4917736df100688d6d225e2667d0555ab684c374799c5468ca28b7e7f653a33340bc78d1dca7fcc4cf365dfa87401ec87e8a9cf472f60e7bc3b6949b8adaf7a2ce5079ad8dff9fcd3f8284a016b7386e085894801e8603e77a394e6e93c899cfba1e89adcc177ba306ee82775eedb84b00ee92987a56b8386a007802383566133dde589c87f09a071f2c110090cdec84a92f133ed08d4b8073293c307f21461d52ad15043ad4535af4c9576c3288e83f1302bec91777087c9c2b37fdd87a78cb4083ed87fb24069e9aa459170deb30774369b3233d23ee4b42700b0869fadafdecf2b884fbbe7b870729625c4eed3a74fb5a0560871faf45327b4327cf03608561d5bb3a65007d594a08212ca992d0fb84258168a4b2c882442775e8ecb3b614d0a3aee0909a0a92d94856ee79f5e37ad53fce688597f218cbfcbb76febba01a411481b252ca3bc44e80ad0552c27be7f0bb8c9cbbad08ea1dfbf1201f9307be5d6ae7392c8a625de6f255af593929ef917d78132002d2260cfef45952a0181c8c5e47be8c9ee88e9ee176d6428e8de818d046f06cc3c359cdfffb1be8804580acc3e8748aeb4d0c2fecb50f7922259a2c52685b24ef63b04e9393e4e5af7c1c46e441fe36b3be8f9d3ee273ac43b296750199a3c0b4fd89380098598fd6b6202b4056ca9a6e6d03eb51451a4361f422a0b45c9875c064e9185a7e188ba13198dff9cb4605195cbea27e117e58e926176b8dd6863ebd4cbff7c7e472b7a38fa1727419130d1bfde56fe11557c5e3606e6991a1c242db3230aab1eaf7b463eef9cd6357b4060f663b3017c0ba4d0be2d22a709b76f167b5015a2769dbe9901d18abc0c2c285200b756057f9b2af9a7e83532f13f6c8be7fd40411bd4ab80fd0f11fe1538baa87e3b2083cab8fd660c0f1c90b4bcbba9ed5b784657b13f5b254ad8caf455bd4eb9260f580538fa69dde93e0a61e057d7903247af859e63dca5fbadedb1eb36f5722f8fb6e1a9cafaa204848b29826b89b556a450191ab5108273fb0e103a01bdfc673d7cd8160d90d2430a23945ebd319357ef09287bcdfce4f32cb5c043d690ad20c0d1177334a8792b2518c17874efb3f0afab5b7756dec945c0bf86d667c0a78f2aefebb285ed019ae6eace0a3be26459dbd6f2e9d1290f7befea161287676dad9430667789e69c090b2ad7a0dcf729d29bb6e350af5c03d6cec3231bd90e44da255baaaac80771d421386a1867ed584db55520178c490223976e3f8f5a6bee8f96c689c270f8f7ddb336c8e5fc49265a1e7642632f6a65ade6a4724a606a9a4955bbf8c9c95adf99228249ba8b76136e3cb2e82b33554f0a34ec48d1318ed85b3c13264abb13eddba21494a606787fcaf46d323204338fdce4323343f494431f58f2d6432c38a57dd83a8ab9f8cc46f2ce4bf8daa0a802eeb53990e6916b22b8719dd596316019f4e181f407626a4638990a3379470815361b2fa45564fb9aea96c00937f0d31286975c8c26e95adcf9e26df2524295d6b75b772ec95caa0535076ea85c1819b601de3f4e9c9e1962b470e147c8f22e0d1c6f7482f63fbc8039f4c9a879a7247e686decf9b36cb15a9afeb077cf20a398a814724ce5a5f53ded62a8baa322f2414bea00161b1023ec070aef656fbe21350876cff4e96e58128838b934d95cb9dcf741772efc455e89279005c09caabe1f3aa70ca4ab8ba92b45ba4d7829ecf311916cc540e7e96ef928930da15917f2e13d78fed992b052545876d638b3898c36795a61b78a2db7ce635a9e2621ef9cc6e9acb7b7985269ec8ff2cd76dc94f47106c3ee5132c84629c54be23f270b886744e452ce9b2ecd2c5fcdf1738cda54808d5201bc7985e519b49bcbd16577ca887a9943f600d4119a8be587a9ebaf91683d0f8ae711800d8605674e82b8594fdf988ae887f3cef270d6b1e2df21b7ab23562144a858f71361424dbf36a980d20e630215172aa17d5d16af93354020e7f6f1e74a42ed96edae4f03d420c9f1b389dd12cf0709b762333b684c7e76fc1d29d831da2bf3a2137bd7a5f7a74f94b2f54eef2dcbfc14276abfbbb2417d91299d39743d6de831860666ac704974b9cc2c3489c5111c07b92b8aba3853e0119dfb79e33a32dabb696d3acefa722e03a9d1429d1296c2bbe3e38847eb4d5a57a27c63bedb17fbdee19537a242d81c7ccbc0d6660e7a3270f27810f3c5035f687b8915e7cd7afe5b008bc97eae792bdca46fb08fccd5455846a0af1ce7ea838b948b3dc962a3dc389e244d3e25c95c0b88c637bdca7edd674507677a8fefd1fda1d1319a8bbd322783c918a447e369d1838af0b248f8f255145e285cdd84f2278b95bc8330599029c188a88f16a9fd7e0c0c0ee52110f6811c293e1ecf463cd092c985b12b55f5b9d128bfe7eac91302be9b48cf1221bef73fda345781372be992d390c1f86c7a8a14d4620cc7f3c0f7cfab196fa4b7796f9dfd819d757dd02fdf43c3bb9a938f16b99da8cb55f26f2d51ba8d24362527899a1d1d51d8ae0258d8d5b5c5221d2f008404425f5ac5c7787dff20ddf95e9ec0c446c955e1a19be50bed0d3f4f344b9f8813fe5d25bacbec36dd7be1b5795a8e125a8e1e26434ec51fc79c357925d1ef2a6a254c4ef829566f5a784718bd746b6c0c0cfb49d96edaa995bb07ad16e37a62535e8ba50fefd0c5e05e907fa77b72743c3479b1a1960b60ff197d0f31940e0eb62c386f86302a0d0559cd0381711ff421330d3010497259755fce9dd4b1d459fab672430100013f32023c28e566200d19bf60f3594dd68631e53ab701d81c7e352146d2463041a38e457d30ab5e6d81a423058bfa6963c228fa6c2249f20a625e7668d77c17e8fd4e10603300000000000000010b87a8005cd141bb0e23431c240f0d9ba6abfbb207095a386fe307e8b9a0e4ca5b640e5698b810ab3fdd54af982953691caab9475378b8742ce4ef1782e2e297da7470f4bcad95f0b9dd5b67cd42d514586a06fc5852c0d2f79e78651e567f8136ca40e5cb5d2f16ba3fd25623e455704cbdaa9a12e1cc236e6e075ff9d0d205f054359baca2c17065a5795af277c80c0d949fabe8d843a81a88006e6921d352eb3bf73d928fb9f68c46b303a8d46ffdd01ed987b64ba80f9897d659e2773c20599917b9877c0a453500252abe335d322083c5e00b092e2b981ed56380083b9d6e71b6460002edcc846e0f7bd4a8f2f81dc7e1f057c4259f9487ecadac14d665270d29cce513f838f0a8bd977d7698ac33e9fc5defea8832a1d93ec5cbcadd8754154c7ab6dd8d8c668a78ea73ba95994b9bc3896c065e61bf0326920535574140066d6c0d14cacf3833c54e3ca490cc071ed0f1f95c7daa99c0141b25dda44432392d8c307fb7f15792b688af9cc6994e2c7bf96c8737cdcfd3de7296260b43aff50896ea5069c254b9eae4fa00af02162307b826fc3f6a0df021303858d9f28f2f44debddbb9fdfcee7817c046063870fd66cc367efcaaf2ab22d364faecb912300d4eef688a20b41ffeb4ac37729604716c63123f812c3a9bf0f97e1b7caa044bc4d5b9e856d03af435e8ff8876437a17390d804d2c94b9ea9243deb63740c8587daba9022de2f55a2bb489140f2c626292f322d661e9be2d5f15b9a086030c19a89e54bd09d8943182241aaeafb0ddb0ec4828fb0de3e1713148aa715f9d597cdef52a3b6c1f850f037862dd86a15f15765b47aa9156c9bba604f51aedfe1d6e8a6d5f5ca9397e3850c5e27ab94334eef8641fc81568e75ee0af53cc3e9d60bc1b5a6e917681c85b38e85aeab517f1c8a4a536801298943210ed216bd221b2005a70a0f8fb2bfa38e88a169e28794ec6de4bd25bb56a8eaf45453f957d4beba02e7e6074da354b899c74fe815b6bd8e1aa6681b6824e97d79a016ee510e7dc594a7a1b3f2ecd77e774bd10266b087e31c54d5b12037997cd4e7b2decded0e206788911110d9a35db605a7b55b6e46a9b0490c95efc67c47699dc1e838e0df2cdbc6f3f22ec815ba2f1221bb7d65408479b41b0f140cf46d3594ab2f98261ba6608f5c48707809c0399b3b32d3a117ec82647398388fc2e1f734d2d07dc9d33f802597e0edac665dde52e906c2c7b7eafca54a57464ea4870e1251e862524c144c48d8bd5eaba3b22d9f4d55c81463a061672293049d1c09602e0141d97a2f0b844ceb32755062640b507603f7105382502a6342b87c52db21b9433d3574914baa7fe65a2db8debd24f955242a8fd966006d8bdb63f9db75b5f221a39ed5cdb616488974c13d7969aca573fa9c2a5ff13e3c1eb301561eaae3c8e15cea416aa9ddef3698be52bb5bda033af6988adf3e731ee62208af238cf3e2db2fbf50a9a86dd9eaa99faad62d27373e988c69c1b8d6676c4a7c4bafb168fda7c0c2803b2d4a03e8b7f04a0a7e2e82798052c373e34c873bbe98b538da9d515b43f12c3a3a33e590ec92221ccf2946dcacb42a95e7ab0821fc44af1d486573f73f045e0367f5bc82c841bb7ab132b6363931145395440aacafa7b93d5820a30862c3f37cefc2cf7f3657a03a7a35191529b95b80c55610c62aac5755815d3e290e5306ba4ff3baaac06ce90fffbcbe87ad41e48a4166aa8293bee0c77d5e994fc3cd12a4ad013b173949d753e1c2d96844dc1b37bbd3c0fc281d6e9b5ac66fb083acea67cc69ec553c074543f55851a334be29d793bcb73db56f72ae1893602037a0ffde4359a23dc26c469f3418523d8788fd25050add339311161dc6496735c3ed3a565504ec576bd64f4a51e42a60cbca11558533a8f67f5511fb4a16bad299851312bb3cd653572ad6b87e690df5dd6b9848db96df64dc4b9b4d30d824576aba02e252a8323ca083e73be4440b560fad4e835a9378cee2d96bde213a4552f54b9b7428c9661844a14a4d07717ffd379df959cf72fa04952ccf0b15c8ae5e736dd355e851d4199c316a77f800a9fa841a07cb64c0605ffc31484cf5f381538465d3d5e2f2edefb97045c17dd1d5641a18a27392550a476976cea2640c3c3f6ba9766b605934bb9b18169966c5104d1f6938235c6e78305a94ff182f80636ccb1195a020f89b703810d674b0d8e1bcb44dcfae32c89c35b57a407f2265aebb80c1543c04893ef903fa315d0be2a29611c772b276630e5355067657447a0a8c36c1363da0cb86a360b3345860e9ceee8b6ee1f846858d7ac281c4f3d77698b27a697875e3d4cb7352221785cc2ed959d8cd0317e20c45f92670d6ba8893206ac51da9ccd52e8405154d68fa3e025083adbfdfd917c2d186c0114480355bee202949a4b6ffb66e74d1b0b395e161aa591eb9eabf98194b0622276219cb4804263cbe1d942c862ca551a12ee008ddda041a913780cf5309a1520fce9b6d82f1aef28bff1ba04d2734ce07588fe26ef45e5e96e1c1036a6c671143416d1643786cb4231e291770586ebf32df774233edcc414fa6e3ceb12d14e4350d883432db129359501d8b73ff7a0b33de48c5227bc49ef75016c18539e986f7b1343979b71cb9a44f3bccf132b8d2276ab273f1626d9a0bf52ae8f8e73100b15517aa6ad21ae3c853ae9ae3fe0741aa803a3d9825b903a15b6972c512fa1466bb68ff5e38096a94b1c3fd5b91c8aeed69937ec4ef8f994ebc89e8bf5b56028d66bbedf2b22d780e9375f26ec707cfb0389d9e2787c6aabdf05473566c73e105dbd78940bdbf6c47d811009ffe4ff175778e4fbbbd757c57150103c58d4e3a7bd8f7212bea642d3668bcc6f67462b3f5ca46e5a91162748fb1efdf8d2250c9458c8857273736622b440cdf5c6ccaae15f49c71c18aee816da67e4a9eaf50b7980a252b96a9dfa94fb759756bf97e9f5e498688e5f38add25b2958bc38c98eaccce8f44e9a2a63aea30de18ba47109240f03e0620f26d16a6a47f2d4ffdc6d12529e3c7d0e7eec5bc0a24badf57d5746d45b5519869c5ca287945ab81086301c87c1f7fda5392597a3a6ac6e7a8606149d8fe6bc2a8aee2ea3f13abd52da3af3a8003b9842d9d64ddd183c03739c031d068eac37d03c92bc7977d6f35c4668320c8f2a523869f380cd1b47a8e2db7edc31e0f1e27a25ae378ffe780f776e4a7695bf8ca7a61d73ce143078bf7d1d84cd96872d06707ba3249ae257f54ff0ef40eb271cdde69392e559b4988ae30ea17e2805faea5f9b127be42e29e6c803dd561adda18f7b73f50a1b948131cdf8ce1a3434e2d8a7b0d1c6ecbdc1a1db24bd25df35cad84a25202815c5e6a688b8b37ec6a2ad2748a5d0ea2a5a0cad14a6d509dd08fdad62e7b10829103c7e4550910bc3b88669c7eeeb8f10dc0abf64b6c911ab00014909083c978939f745e162d027c01a489d6777fa95da337c24a9640e5aaeb0a9ac3458955d601c208bb68bfc71737e29c5f7181ceca530255d73d558099ed0445ac6e12ce8f89ed770eee9f88a2c991ef606c8ce2237dd9f4b9ca32512ec24b9cf2ca4d000f7d167acb949c6121dcc30c0bb976190191eeb98a753231e8268cfeb0ae862e6e0d6d918d6452e88b7be6192bf47d0e9b6a27093f00f3d1835bab2f98585202e30798aedafc233c39ddcefb981cef4fa5de9e558b42a38b64d8dbfb033f1d81bce7e15658dd7e93d15904c19b3cc98a8e32b825c8e63ac0a19e4456cf0ae6c8bdc45daaea5922d98eab2ad7c335cca067c73fb5c01fe788e8fb3ab24b9f1bad7f0c3251134b3b81c6374ce0df9538d551254d7e05fe35e19b020d504a53d839f0e4f6b1c31da8165e0120dec87edac833807a0c613968fc955d9355d45f47a8c2d5d33c98810890cadfc2f626691d11a1540e1b3222a9d9d93ecdbca0eda8adf9203de044570b55b87b25a1443a04640a79d65eda2ff58a30ee4a90e5725f26b23a7c375c3c113d6f0e5cf93c5e1005e184b078a97ca838d79793d988c2f089ef5960ee234f7ce95c93c482c826df9b8a981dd246d5cbed48e9e0f8ce251edd536c978c2a34f28cf24ba67006ec6f026e314b3257cd367c656c7fec4011ef5f52561900641a323879a4705fb4756bccdb5fde8d750ecfb20f9f3e0555c767df65ff851ab0b77edbd28dcdbfce8bfe271ca79e3d845bc4fd713bef06e1835285c030c877becb78976ac521e71bf3816eb5f9c987f0290675f8f7332424dfba5dd962979dca0ca11bc734b8da81739ec13113ca8a06a8cac5823685f26e45acaef53f9d18f1c251daa084f95caf0f8c0dcac6f5a7c3ff166cc73f42e5045597d13927012cb0ada24a10338fef868a93dbd00366d7d02722f3ebaa6307ada7789852554af7cae4d9e8ab44c723ed248f3a577432ae7c943a943354a46bb4cb407e034b2fdbdc57aed0b6eb91bf438fed03cfe6d9416de10c8b8b009a5ae99f7fc9c715839127dbb800224d8f14480d1bdbebbc49aec17a0522dbf7abd077ec3bc6e2317194d91e01bb99d1d6dc690a5fbc01643f7fac1dd6275a967b13a3b1eb0aaf169ae4a1121430235defdaee37cd0a5456a7c46753790805360ad7c55078bf415f67629341603213cf4934bdad52081e1a3598619646ed2a80c0f1bdbf04348cb34c5622a01194eeeef0334872dc500566407a3628fd72648e143141946c379db7ac35a078a6cda18b67bfd66bc8c59293023a781e01ac9bf5af4dc830dedae04514a346041348a7a3be16a93b2de6d193a2d95024287677d4f6524e3d245d91884ce4ce837ee48036a28665cf1cecf047097b7e811b8b94b4eb98e8d40bc1a04103df9d68a2ee817fd32a01e30fcaa804c84d9893fcfe9843bfdbc78a2d2b0bc13d4311221ab69f5810ca5dbcdc16974e11a183cea17f45345f4290a7924f079fda182bf0889f6d2598a2a074e181f3d5afe44064716921024bc2100eb74fba49d93983a6adc3619ff524ec69fce6814b18e745d9a9ec748c605ab88402ed7e1b1ca3b16745bf6bcef16d41ca462f53ce4f61a4dc0a3ddd97542790de36fb71ca4f22a875c71b9d2bb734262d6b64dad68b3e74b3ccfc991a16e4c0d82000333adb601a92c505f3777bc24f481a5d9718f967c7da5be14e6afd56c53503b82803dfdc081e1818c96818560e3f1b2623ceec30732da696a1ceacf7560cb8366340085284a7635d350a3ff2e4030f670d359225529a9d99523e48d40dd33143dadbf6909ef72490599100c8d31b768352998df8e511c6b0f308376d8325faf65eafd9bf4c7a0473a7e90190b4730bc4e99e8369ef1bd085db8891dd456ba073b289420f231250c0ece8bf751f3d24b8df030ca37f77db88b9b60f3dd595e2ae08dbd167ca48044e08471cf2ae4785d34f737b269beeaaf665b438ef1648efc5bb983f61f60c8a08a2d65490fd8fd261deccbd4b1ec99e12bf84937242f566438d38a2185995048028eee40c4d1f7aba3f1554ad1986a5af53b725462fc71b412b79ef515ff796ef1a5f917a8bb5875173ccace1408814af623d32bb69241743587d870ca95c3cdd5f38c2efb93b5031ebf262c6638bd01803a3e3b7cae967384a79780fd7542aaf9575565635e0a9b623018afa5b14b49335177bbbe4b556c0b6fe544fc6edc6dda333979c8659325bca20c9f161b2a32dfdd081a9ecca17c816e1ab7f6c79d15b5d3c19a9357f3d5f2891af8f902df414eef6da24f8d3f1ee6c6f69e1af4a449a3c218af53b688f58b1dd7991cae5269ca0de00ab57adacc3cc9429ba7a065c8ae8d47c02746e1a070d44ff18dcd3f97ffc4f2466072c3f8c1a0ebe0b057090000"
        raw = unhexlify(tx)
        tx = LTransaction.parse(raw)

        vout = tx.vout[0]
        bpk = unhexlify("bc311008510ca3e70755509190d96fe8dd20d3f9673077c9fee0c9cf69a3d9ea")
        value, asset, vbf, abf, extra, min_value, max_value = vout.unblind(bpk)

        self.assertEqual(value, 10000000)
        self.assertEqual(asset, unhexlify("18696cf23e3209a6e84479d01f13fe79c901356ae53907cc882cffd3e2640123"))
        self.assertEqual(extra, b"")

    def test_descriptors(self):
        multi = "wsh(sortedmulti(1,[12345678/44h/12]xpub6BwcvdstHTJtLpp1WxUiQCYERWSB66XY5JrCpw71GAJxcJ6s2AiUoEK4Nzt6UDaTmanUiSe6TY2RoFturKNLXeWBhwBF6WBNghr8cr7qnjk/{0,1}/*,[abcdef12/84h/22h]xpub6F6wWxm8F64iBHNhyaoh3QKCuuMUY5pfPPr1H1WuZXUXeXtZ21qjFN5ykaqnLL1jtPEFB9d94CyZrcYWKVdSiJKQ6mLGEB5sfrGFBpg6wgA/{0,1}/*))"
        descs = [
            "wpkh([abcdef12/84h/22h]xpub6F6wWxm8F64iBHNhyaoh3QKCuuMUY5pfPPr1H1WuZXUXeXtZ21qjFN5ykaqnLL1jtPEFB9d94CyZrcYWKVdSiJKQ6mLGEB5sfrGFBpg6wgA/{0,1}/*)",
            multi,
            "blinded(slip77(L2t59TFgKmc83tPJD1rTy2KxJt44CMMQYsECXdz75xSqVv1X9Tvr),%s)" % multi,
            "blinded(xprvA18YC5Aog5LxHgMrSv5t9QaHyfh5DU8Pr8zFTP5QhJSTjdg3mSpEyxLZfNQaEc8sALUtsHeDJYsp8YnobhjJT9D7JADoEV4wXiMuNMYDLZ2/{0,1}/*,%s)" % multi,
            "blinded(musig(xprvA18YC5Aog5LxHgMrSv5t9QaHyfh5DU8Pr8zFTP5QhJSTjdg3mSpEyxLZfNQaEc8sALUtsHeDJYsp8YnobhjJT9D7JADoEV4wXiMuNMYDLZ2/{0,1}/*,xprv9ybbsYg8NKhDxDrSdmWPWih2AVjyDYxvTYvjaqNLmSpQcaLhmXeXUcHDEK99MiPDJwteBF2EzZkhfwwQDycrTgdxWGAgyWVpVJxrgZF5eCT/{0,1}/*),%s)" % multi,
            "blinded(musig(xpub6E7tbahhWSuFWASKYwctWYX2XhXZcvrFDMurFmV2FdyScS1CJz8VXkf3WchmYnBmC8uMVgENPLYd8uWjXYjxFFwFXD6unhFXs6VBjHTAb9e/{0,1}/*,xprv9ybbsYg8NKhDxDrSdmWPWih2AVjyDYxvTYvjaqNLmSpQcaLhmXeXUcHDEK99MiPDJwteBF2EzZkhfwwQDycrTgdxWGAgyWVpVJxrgZF5eCT/{0,1}/*),%s)" % multi,
        ]
        for d in descs:
            desc = LDescriptor.from_string(d)
            self.assertEqual(d, str(desc))
            # test we can derive addresses
            addr = desc.derive(0).address()
        invalid_descs = [
            # slip77 must be WIF key
            "blinded(slip77(xprvA18YC5Aog5LxHgMrSv5t9QaHyfh5DU8Pr8zFTP5QhJSTjdg3mSpEyxLZfNQaEc8sALUtsHeDJYsp8YnobhjJT9D7JADoEV4wXiMuNMYDLZ2),%s)" % multi,
            # blinded key and descriptor should both have or not have wildcards and branches
            "blinded(L2t59TFgKmc83tPJD1rTy2KxJt44CMMQYsECXdz75xSqVv1X9Tvr,%s)" % multi,
        ]
        for d in invalid_descs:
            with self.assertRaises(Exception):
                LDescriptor.from_string(d)